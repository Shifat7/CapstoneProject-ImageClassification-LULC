CONFIG: {'seed': 42, 'epochs': 2, 'learning_rate': 1e-05, 'classifier_lr': 3e-06, 'batch_size': 8, 'adam_betas': [0.9, 0.999], 'weight_decay': 0.001, 'learning_rate_schedule': {'100': 0.1}, 'train_dir': 'splits', 'train_mode': 'validation', 'create_validation_set': 'False', 'val_dir': 'splits', 'val_mode': 'test', 'clip_sample_values': 1, 'transforms': None, 'num_classes': 8, 'only_rgb': 0, 'rgb_plus_s1': 0, 'dataloader_workers': 8, 's1_input_channels': 2, 's2_input_channels': 13, 'train_used_data_fraction': 1, 'image_px_size': 224, 'cover_all_parts_validation': 1, 'cover_all_parts_train': 0, 'balanced_classes_train': 1, 'balanced_classes_validation': 0, 's1_normalization_fixed': 1, 'simclr_dataset': 0, 'out_dim': 128, 'model': 'DoubleSwinTransformerSegmentation', 'base_model': 'resnet18', 'target': 'dfc', 'finetuning': 0, 'checkpoint': 'checkpoints/swin_t.pth', 'embedding_size': 256, 'wandb_project': None}
model_name swin-t
/home/harry/miniconda3/envs/TEST/lib/python3.8/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at /croot/pytorch_1681837265408/work/aten/src/ATen/native/TensorShape.cpp:3190.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Frozen backbone
/home/harry/miniconda3/envs/TEST/lib/python3.8/site-packages/torch/utils/data/dataloader.py:554: UserWarning: This DataLoader will create 8 worker processes in total. Our suggested max number of worker in current system is 4, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(



Epoch:0, Loss:2.211:   1%|█▎                                                                                                                                              | 3/328 [01:44<3:09:17, 34.95s/it]
Traceback (most recent call last):
  File "train_evaluation.py", line 561, in <module>
    loss.backward()
  File "/home/harry/miniconda3/envs/TEST/lib/python3.8/site-packages/torch/_tensor.py", line 488, in backward
    torch.autograd.backward(
  File "/home/harry/miniconda3/envs/TEST/lib/python3.8/site-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt